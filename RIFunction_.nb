(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     92997,       2241]
NotebookOptionsPosition[     91587,       2199]
NotebookOutlinePosition[     91928,       2214]
CellTagsIndexPosition[     91885,       2211]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", 
   RowBox[{"\"\<RIFunction`\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<paul`\>\"", ",", " ", "\"\<PackageDeveloper`\>\"", ",", " ", 
      "\"\<FiniteMapping`\>\"", ",", " ", "\"\<numerics`\>\"", ",", " ", 
      "\"\<cform`\>\"", ",", " ", "\"\<RVarval`\>\"", ",", " ", 
      "\"\<SymbolicC`\>\""}], "}"}]}], "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"\"\<RIFunction`*\>\"", ",", "\"\<RIFunction`Private`*\>\""}], 
   "]"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\n", 
       RowBox[{
        RowBox[{
         RowBox[{"Represent", "\n", "  ", 
          RowBox[{"f", ":", " ", 
           RowBox[{"(", 
            RowBox[{"I", " ", "->", " ", "R"}], ")"}]}]}], " ", "->", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"J", " ", "->", " ", "R"}], ")"}], "\n", "\n", 
          RowBox[{"(", 
           RowBox[{"X", " ", "->", " ", "R"}], ")"}], " ", "objects", " ", 
          "are", " ", "represented", " ", "by", " ", 
          RowBox[{"RVarval", ".", "\n", "\n", "Alternatively"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"this", " ", "represents", " ", "vector", " ", 
           RowBox[{"(", 
            RowBox[{"or", " ", "matrix", " ", "etc"}], ")"}], " ", "valued", 
           " ", "and", " ", "argued", " ", 
           RowBox[{"functions", "\n", "\n", "  ", "[", "f", "]"}]}], ":", " ", 
          RowBox[{"R", "^", "#I"}]}], " ", "->", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"R", "^", "#J"}], "\n", "\n", "Sometimes", " ", "we", " ", 
           "just", " ", "write", "\n", "\n", "  ", 
           RowBox[{"f", ":", " ", "I"}]}], " ", "->", " ", 
          RowBox[{
           RowBox[{"J", " ", "or", " ", 
            RowBox[{"f", ":", " ", "#I"}]}], " ", "->", " ", 
           RowBox[{"#J", "\n", "\n", "for", " ", "such", " ", 
            RowBox[{"functions", ".", "\n", "\n", "This"}], " ", "package", 
            " ", "abstracts", " ", "away", " ", "the", " ", "differences", 
            " ", "between", " ", "\"\<pure functions\>\""}]}]}]}], ",", " ", 
        "\n", 
        RowBox[{"named", " ", "functions", " ", 
         RowBox[{"(", 
          RowBox[{"symbols", " ", "with", " ", "down", " ", "values"}], ")"}],
          " ", "and", " ", "other", " ", "expressions", " ", "e", "\n", 
         "that", " ", "evaluate", " ", "to", " ", "something", "\n", "when", 
         " ", "used", " ", "as", " ", 
         RowBox[{"e", "[", "args", "]"}]}], ",", " ", 
        RowBox[{
        "as", " ", "well", " ", "as", " ", "plain", " ", "expressions", " ", 
         "that", " ", "represent", " ", "functions", " ", "in", " ", 
         "certain", " ", "variables", "\n", "which", " ", "would", " ", 
         "evaluate", " ", "to", " ", "numerical", " ", "results", " ", "when",
          " ", "Block"}], ",", " ", 
        RowBox[{
         RowBox[{"With", " ", "or"}], " ", "/.", " ", 
         RowBox[{
         "is", " ", "used", " ", "to", "\n", "provide", " ", "values", " ", 
          "for", " ", "the", " ", "variables", " ", "in", " ", 
          RowBox[{"them", ".", "\n", "\n", "The"}], " ", "package", " ", 
          "deals", " ", "with", " ", "functions", " ", "with", " ", "both", 
          " ", "named", " ", "and", " ", "nameless", " ", 
          RowBox[{"(", "positional", ")"}], " ", 
          RowBox[{"arguments", ".", "\n", "The"}], " ", "function", " ", 
          "can", " ", "accept", " ", "named", " ", "arguments", " ", "as", 
          " ", "a", " ", "list", " ", "of", " ", "options", " ", 
          RowBox[{"(", "rules", ")"}], " ", "or", " ", "as", " ", "a", " ", 
          "sequence", " ", "of", " ", "them"}]}], ",", "\n", 
        RowBox[{
        "or", " ", "names", " ", "can", " ", "be", " ", "mapped", " ", "to", 
         " ", "positional", " ", 
         RowBox[{"arguments", ".", "\n", "\n", "Functions"}], " ", "can", " ",
          "always", " ", "be", " ", "evaluated", " ", "partways", " ", "with",
          " ", "the", " ", "variables", " ", "still", " ", 
         RowBox[{"present", ".", "\n", "\n", "It"}], " ", "can", " ", 
         "compute", " ", "derivatives", " ", "of", " ", "the", " ", "given", 
         " ", "function", " ", "by", " ", "any", " ", "of", " ", "its", " ", 
         RowBox[{"arguments", ".", "\n", "\n", "It"}], " ", "can", " ", 
         "call", " ", "the", " ", "function", " ", "in", " ", "different", 
         " ", 
         RowBox[{"ways", ".", "\n", "\n", "It"}], " ", "can", " ", "compile", 
         " ", "the", " ", "function"}], ",", " ", 
        RowBox[{
        "both", " ", "to", " ", "CompiledFunction", " ", "using", " ", 
         "Compil"}]}], ")"}], "\n", "and", " ", "to", " ", "compileable", " ", 
      RowBox[{"(", 
       RowBox[{"yet", " ", "unreadable"}], ")"}], " ", "C", " ", "code", " ", 
      "using", " ", 
      RowBox[{"cform`", ".", "\n", "Compiled"}], " ", "functions", " ", 
      "take", " ", "NumericVector", " ", "arguments", " ", "and", " ", "give",
       " ", "NumericVector", " ", "return", " ", 
      RowBox[{"values", ".", "\n", "\n", "It"}], " ", "only", " ", "handles", 
      " ", "functions", " ", "with", " ", 
      RowBox[{"(", 
       RowBox[{"machine", "-"}], ")"}], "real"}], "-", 
     RowBox[{
     "valued", " ", "arguments", " ", "and", "\n", "constant", " ", "length", 
      " ", "real", " ", "vectors", " ", "as", " ", "return", " ", 
      RowBox[{"values", ".", "\n", "\n", "Default"}], " ", "variable", " ", 
      "names", " ", "are", " ", 
      RowBox[{"{", "1", "}"}]}]}], ",", " ", 
    RowBox[{"{", "2", "}"}], ",", " ", 
    RowBox[{"{", "3", "}"}], ",", " ", 
    RowBox[{"etc", "."}], ",", " ", 
    RowBox[{
    "as", " ", "in", " ", "a", " ", "FiniteMapping", " ", "for", " ", 
     "representing", "\n", "a", " ", 
     RowBox[{"list", "."}]}]}], "\n", "*)"}]}]}], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], " ", "\n", "\n", 
  RowBox[{"(*", " ", "TODO", " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Don", "'"}], "t", " ", "allow", " ", "indexing", " ", 
     "variables", " ", "with", " ", "variables", " ", 
     RowBox[{"(", 
      RowBox[{
      "no", " ", "variable", " ", "should", " ", "be", " ", "subexpression", 
       " ", "of", " ", "another"}], ")"}], "\n", "\n", "Check", " ", 
     "generated", " ", 
     RowBox[{"CCode", ":", " ", 
      RowBox[{
       RowBox[{
       "should", " ", "contain", " ", "integers", " ", "only", " ", "within", 
        " ", "variable", " ", "references", " ", 
        RowBox[{"(", 
         RowBox[{"and", " ", 
          RowBox[{"powers", "?"}]}], ")"}], "\n", " ", "certainly", " ", 
        "not", " ", "in", " ", "divisions", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"note", " ", "that", " ", "though", " ", 
           RowBox[{"CForm", "[", 
            RowBox[{"x", "/", "2"}], "]"}], " ", "gives", " ", 
           RowBox[{"x", "/", "2."}]}], ",", " ", 
          RowBox[{
          "but", " ", "we", " ", "handle", " ", "all", " ", "operators", " ", 
           "ourselves"}]}], ")"}], "\n", "\n", "Support", " ", "variable", 
        " ", "names", " ", "with", " ", "head", " ", "List", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"problems", " ", "in", " ", "replacement"}], ",", " ", 
          RowBox[{"evaluation", " ", 
           RowBox[{"(", 
            RowBox[{"Listable", " ", "operations"}], ")"}]}], ",", " ", 
          RowBox[{"derivatives", " ", 
           RowBox[{"etc", "."}]}]}], ")"}], "\n", " ", "or", " ", "develop", 
        " ", "custom", " ", "list", " ", "to", " ", "display", " ", "like", 
        " ", "an", " ", "ordered", " ", "pair", " ", 
        RowBox[{
         RowBox[{"(", ")"}], "/", "tuple"}]}], "\n", " ", "-", " ", 
       RowBox[{
       "in", " ", "particular", " ", "because", " ", "FiniteMapping", " ", 
        "represents", " ", "vectors", " ", "with", " ", "such", " ", 
        "variables"}]}]}]}], ",", " ", 
    RowBox[{
    "thus", " ", "every", " ", "ExpressionList", " ", "without", "\n", "  ", 
     "named", " ", "outputs", " ", "has", " ", 
     RowBox[{"them", "!"}], "\n", "\n", "Does", " ", "it", " ", "make", " ", 
     "sense", " ", "to", " ", "support", " ", "the", " ", "empty", " ", 
     "function"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "no"}], " ", "arguments"}], ",", " ", 
    RowBox[{
     RowBox[{"no", " ", 
      RowBox[{"ouputs", "?", "\n", " ", "Just"}], " ", "outputs", " ", 
      "might", " ", "make", " ", "sense", " ", 
      RowBox[{"(", 
       RowBox[{"constants", "!"}], ")"}], "\n", "\n", "Allow", " ", 
      "reordering", " ", "inputs", " ", 
      RowBox[{"(", 
       RowBox[{"and", " ", "outputs"}], ")"}], "\n", " ", "This", " ", 
      "might", " ", "not", " ", "always", " ", "make", " ", "sense", " ", 
      "when", " ", "a", " ", "specific", " ", "vector", " ", "is", " ", 
      "represented", " ", 
      RowBox[{"implicitly", ".", "\n", "  ", "TODO"}], " ", "do", " ", "we", 
      " ", "allow", " ", "the", " ", "RVarval", " ", "to", " ", "supply", " ",
       "values", " ", "in", " ", "an", " ", "order", " ", "different", " ", 
      "from", " ", "the", " ", "one", " ", 
      RowBox[{"expected", "?", " ", "What"}], " ", "do", " ", "we", " ", "do",
       " ", "in", " ", "that", " ", 
      RowBox[{"case", "?"}], "\n", "\n", "*", " ", "Give", " ", "special", 
      " ", "treatment", " ", "to", " ", "Array"}], "-", 
     RowBox[{"Valued", " ", 
      RowBox[{"functions", ".", "\n", "\n", "Allow"}], " ", "mixed", " ", 
      "symbolic"}], "-", 
     RowBox[{"numeric", " ", "evaluation", "\n", "\n", "Make", " ", 
      RowBox[{"composition", "/", "'"}], 
      RowBox[{"concatenation", "'"}], " ", 
      RowBox[{"(", 
       RowBox[{"execute", " ", "after", " ", "one", " ", "another"}], ")"}], 
      "\n", " ", "a", " ", "first"}], "-", 
     RowBox[{"class", " ", "feature", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
        "where", " ", "are", " ", "there", " ", "performance", " ", 
         "benefits"}], ",", " ", 
        RowBox[{"where", " ", 
         RowBox[{"not", "?"}]}]}], ")"}]}], "\n", " ", "-", " ", 
     RowBox[{
     "compute", " ", "composition", " ", "derivative", " ", "according", " ", 
      "to", " ", "chain"}], "-", "rule", "\n", " ", "-", " ", 
     RowBox[{
     "make", " ", "some", " ", "symbolic", " ", "example", " ", "to", " ", 
      "verify"}]}], ",", " ", 
    RowBox[{
     RowBox[{"c", ".", "f", ".", " ", "rifunction", ".", "nb"}], "\n", " ", 
     "-", " ", 
     RowBox[{
     "make", " ", "use", " ", "of", " ", "sparsity", " ", "in", " ", 
      "Selector", "\n", "  ", "remember", " ", "when", " ", "something", " ", 
      "is", " ", "the", " ", "result", " ", "of", " ", "composing", " ", "a", 
      " ", "function", " ", "with", " ", "a", " ", "sparse", " ", "one"}], 
     "\n", " ", "-", " ", 
     RowBox[{
     "when", " ", "combining", " ", "this", " ", "with", " ", "another", " ", 
      "function"}]}], ",", " ", 
    RowBox[{
     RowBox[{"make", " ", "its", " ", "Jacobian", " ", "sparse", " ", "too"}],
      "\n", " ", "-", " ", 
     RowBox[{
     "let", " ", "the", " ", "user", " ", "choose", " ", "whether", " ", 
      "the", " ", "output", " ", "should", " ", "be", " ", "a", " ", 
      RowBox[{"SparseArray", ".", "\n", " ", 
       RowBox[{"-", " ", "store"}]}], " ", "hints", " ", "when", " ", 
      RowBox[{"e", ".", "g", ".", " ", "derivatives"}], " ", "are", " ", 
      "sparse", "\n", "   ", "in", " ", "EvaluateDerivative", " ", 
      RowBox[{"(", 
       RowBox[{
       "instead", " ", "of", " ", "making", " ", "it", " ", "as", " ", "a", 
        " ", "function"}], ")"}], " ", "produce", " ", "SparseArray", " ", 
      "type", " ", "results", " ", "where", " ", "meaningful"}], "\n", " ", 
     "-", " ", 
     RowBox[{"allow", " ", 
      RowBox[{"different", "/", "non"}]}], "-", 
     RowBox[{"matching", " ", 
      RowBox[{"input", "/", "output"}], " ", "names"}]}], ",", " ", 
    "rearrange", ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"drop", " ", "names", " ", "or", " ", 
       RowBox[{"forbid", "?", "\n", "\n", "Compute"}], " ", "derivatives", 
       " ", "of", " ", "Selector"}], "\n", "  ", "-", " ", 
      RowBox[{
      "Identity", " ", "functions", " ", "special", " ", "case", "\n", "\n", 
       "Generate", " ", "cform", " ", "constructing", " ", 
       RowBox[{"matrices", "/", 
        RowBox[{"(", "Sparse", ")"}]}], 
       RowBox[{"Array", "'"}], "s"}]}], "\n", " ", "->", " ", 
     RowBox[{"*", "\n", " ", 
      RowBox[{"-", " ", "other"}], " ", "Position", " ", "like", " ", 
      "patterns", " ", "might", " ", "work", " ", "too", "\n", "\n", 
      "Optimize", " ", "the", " ", "case", " ", "of", " ", "unnamed", " ", 
      RowBox[{"(", 
       RowBox[{"purely", " ", "index"}], ")"}], " ", 
      RowBox[{"variables", "."}]}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
   "Stores", " ", "all", " ", "information", " ", "connected", " ", "with", 
    " ", "an", " ", 
    RowBox[{"RFunction", "."}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"Implementation", " ", "notes"}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Valid", " ", 
      RowBox[{"representations", ":", "\n", "\n", 
       RowBox[{
        RowBox[{"RIFunction", "[", 
         RowBox[{"ExpressionList", ",", " ", "expr_List", ",", " ", 
          RowBox[{"vars_List", " ", 
           RowBox[{"(", 
            RowBox[{",", " ", "outputs_List"}], ")"}]}]}], "]"}], "\n", 
        "    ", "expr", " ", "evaluates", " ", "to", " ", "a", " ", 
        "NumericVector", " ", "when", " ", "vars", " ", "are", " ", 
        "inserted", " ", "via", " ", "any", " ", "of"}]}]}], " ", "/."}], ",",
     " ", "With", ",", " ", 
    RowBox[{
     RowBox[{
     "Block", "\n", "  ", "outputs", " ", "are", " ", "optionally", " ", 
      "named"}], " ", "-", " ", 
     RowBox[{"default", " ", "names", " ", "are", " ", 
      RowBox[{"FMMakeListDomainNames", "@", 
       RowBox[{"Length", "@", "expr"}]}], "\n", "\n", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
       "]"}], "\n", "  ", "Represents", " ", "f", " ", "\[Degree]", " ", 
      "g"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", "h"}], 
      RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
     RowBox[{"f", 
      RowBox[{"(", 
       RowBox[{"g", 
        RowBox[{"(", "x", ")"}]}], ")"}], "\n", "  ", "Output", " ", "names", 
      " ", "of", " ", "g", " ", "and", " ", "input", " ", "names", " ", "of", 
      " ", "f", " ", "are", " ", "ignored", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"do", " ", "no", " ", "need", " ", "to", " ", "match"}], 
        ")"}], ".", "\n", "   ", "If"}], " ", "you", " ", "want", " ", "to", 
      " ", "force", " ", "matching"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "do", " ", "so", " ", "at", " ", "construction", " ", "time", "\n", "\n", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
        "pairing_"}], "]"}], "\n", "    ", "Represents", " ", "a", " ", 
      "function", "\n", "\n", "    ", 
      RowBox[{"f", ":", " ", 
       RowBox[{"(", 
        RowBox[{"I", " ", "->", " ", "R"}], ")"}]}]}], " ", "->", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"K", " ", "x", " ", "J"}], " ", "->", " ", "R"}], ")"}], "\n",
       "\n", "    ", "for", " ", "x", " ", "defined", " ", "by", " ", 
      "pairing", " ", 
      RowBox[{"(", 
       RowBox[{"c", ".", "f", ".", " ", "RVarvalMakePairIndexed"}], ")"}]}]}],
     ",", "\n", "    ", 
    RowBox[{
    "via", " ", "#K", " ", "components", " ", "functions", " ", "c_k"}], ",", 
    "\n", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{"c_k:", " ", 
       RowBox[{"(", 
        RowBox[{"I", " ", "->", " ", "R"}], ")"}]}], " ", "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"J", " ", "->", " ", "R"}], ")"}], "\n", "\n", "    ", "TODO",
        " ", "I", " ", "and", " ", "J", " ", "do", " ", "not", " ", "need", 
       " ", "to", " ", "be", " ", "stored", " ", "with", " ", "each", " ", 
       RowBox[{"component", ".", "\n", "    ", "TODO"}], " ", "Check", " ", 
       "whether", " ", "really", " ", "to", " ", "components", " ", "all", 
       " ", "accept", " ", "the", " ", "same", " ", "args", " ", "and", " ", 
       "return", " ", "the", " ", 
       RowBox[{"same", " ", "--"}], " ", "or", " ", "do", " ", "I", " ", 
       "even", " ", "use", " ", "it", " ", 
       RowBox[{"otherwise", "?", "\n", "\n", "    ", "such"}], " ", "that", 
       "\n", "\n", "    ", "f", 
       RowBox[{"(", "x", ")"}], 
       RowBox[{"(", 
        RowBox[{"pairing", "[", 
         RowBox[{"k", ",", " ", "j"}], "]"}], ")"}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"c_k", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"(", "j", ")"}], "\n", "\n", "    ", "Note", " ", "that", " ",
         "each", " ", "component", " ", "function", " ", "receives", " ", 
        "the", " ", "same", " ", 
        RowBox[{"arguments", ".", "\n", "\n", 
         RowBox[{"RIFunction", "[", 
          RowBox[{
          "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
           "saIndex_List"}], "]"}]}], "\n", "  ", 
        RowBox[{"select", ":", " ", 
         RowBox[{"(", 
          RowBox[{"B", " ", "->", " ", "R"}], ")"}]}]}], " ", "->", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", " ", "->", " ", "R"}], ")"}], "\n", "  ", "with", "\n", 
        "  ", "select", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"(", "a", ")"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"s", 
          RowBox[{"(", "a", ")"}]}], ")"}], "\n", "  ", "for", " ", 
        "injective", " ", "FiniteMapping", " ", 
        RowBox[{"s", ":", " ", "A"}]}], " ", "->", " ", 
       RowBox[{
        RowBox[{
        "B", "\n", "\n", "  ", "saIndex", " ", "stores", " ", "the", " ", 
         "indices", " ", "into", " ", "b", " ", "which", " ", "will", " ", 
         "be", " ", "distributed", " ", "into", " ", 
         RowBox[{"a", ".", "\n", "   ", "It"}], " ", "has", " ", "the", " ", 
         "same", " ", "length", " ", "as", " ", 
         RowBox[{"a", ".", "\n", "   ", "It"}], " ", "consists", " ", "of", 
         " ", "integers", " ", "from", " ", "1"}], ":", 
        RowBox[{
         RowBox[{"Length", "@", "B"}], "\n", "\n", "\n", "  ", "TODO", " ", 
         "generalize", " ", "to", " ", "any", " ", "input", " ", "and", " ", 
         "output", " ", "size"}]}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "maybe", " ", "even", " ", "repeated", " ", "outputs", "\n", "\n", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Repeated", ",", " ", "f_RIFunction", ",", " ", "p_List", ",", " ", 
        "pairing_"}], "]"}], "\n", "  ", "given", " ", 
      RowBox[{"f", ":", " ", "A"}]}], " ", "->", " ", 
     RowBox[{"B", " ", "and", " ", "P"}]}], ",", " ", 
    RowBox[{
     RowBox[{"make", "\n", "  ", 
      RowBox[{"f", ":", " ", 
       RowBox[{"P", " ", "x", " ", "A"}]}]}], " ", "->", " ", 
     RowBox[{
      RowBox[{
      "P", " ", "x", " ", "B", "\n", "  ", "where", " ", "x", " ", "is", " ", 
       "defined", " ", "by", " ", "pairing", "\n", "\n", 
       RowBox[{"RIFunction", "[", 
        RowBox[{
        "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
        "]"}], "\n", "  ", 
       RowBox[{"c", ":", " ", 
        RowBox[{"(", 
         RowBox[{"I", " ", "->", " ", "R"}], ")"}]}]}], " ", "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"O", " ", "->", " ", "R"}], ")"}], "\n", "  ", "where", " ", 
       "the", " ", "returned", " ", "object", " ", "is", " ", "always", " ", 
       "the", " ", 
       RowBox[{"same", "."}]}]}]}]}], "\n", "*)"}]}]], "Code"],

Cell[BoxData[
 RowBox[{"PublicSymbols", "[", "\n", "  ", 
  RowBox[{
  "RIFunction", "\n", ",", " ", "RIFunctionMakeConstant", "\n", ",", " ", 
   "RIFunctionMakePaired", "\n", ",", " ", "RIFunctionMakeRepeated", "\n", 
   ",", " ", "RIFunctionMakeFromExpressionList", "\n", ",", " ", 
   "RIFunctionMakeSelector", "\n", ",", " ", "RIFunctionMakeComposition", 
   "\n", ",", " ", "RIFunctionOutputs", "\n", ",", 
   "RIFunctionOutputExpressionMap", "\n", ",", " ", "RIFunctionArguments", 
   "\n", ",", " ", "RIFunctionExpressionList", "\n", ",", " ", 
   "RIFunctionEvaluate", "\n", ",", " ", "RIFunctionEvaluateNameless", "\n", 
   ",", " ", "RIFunctionEvaluateDerivative", "\n", ",", " ", 
   "RIFunctionEvaluateDerivativeNameless", "\n", ",", " ", 
   "RIFunctionEvaluateMultiDerivative", "\n", ",", " ", 
   "RIFunctionEvaluateMultiDerivativeNameless", "\n", ",", " ", 
   "RIFunctionMakeMultiDerivative", "\n", ",", " ", 
   "RIFunctionMakeFullJacobian", "\n", ",", " ", 
   "RIFunctionMakeMultiDerivativeIndexed", "\n", ",", " ", 
   "RIFunctionMakeDerivativeIndexed", "\n", "  ", ",", 
   "RIFunctionMakeDerivative", "\n", ",", " ", "RIFunctionCForm", "\n", ",", 
   " ", "RIFunctionCFormExpressions", "\n", ",", " ", 
   "RIFunctionCFormOutputArrayAssignments", "\n", ",", " ", 
   "RIFunctionCFormIndexedFunction", "\n", ",", " ", 
   "RIFunctionCFormAllDerivativesIndexed", "\n", ",", " ", 
   "RIFunctionCFormAllDerivativesIndexedFunction"}], "\n", "]"}]], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "TODO", " ", "Hold", " ", "expr", " ", "to", " ", "stop", " ", "it", " ", 
    "from", " ", "being", " ", "evaluated", " ", "when", " ", "nothiing", " ",
     "changed"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "TODO", " ", "add", " ", "a", " ", "way", " ", "to", " ", "have", " ", 
    "named", " ", 
    RowBox[{"(", 
     RowBox[{"not", " ", "just", " ", "list", " ", "indexed"}], ")"}], " ", 
    "outputs"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}], "\n"}], "\n", 
 RowBox[{"RIFunction", "\n", "\n", 
  RowBox[{"(*", " ", "Attributes", " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"RIFunction", "~", "SetAttributes", "~", "HoldAllComplete"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]}]}], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}]}]], "Code"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"^", 
   RowBox[{"^", " ", 
    RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]], "Code"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"--", " ", 
   RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Name", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionMakeFromExpressionList", "[", "\n", "  ", 
      RowBox[{"expression_List", "\n", ",", " ", "arguments_List"}], "\n", 
      "\n", 
      RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", ",", "\n", 
     "  ", "\"\<Create an RIFunction from an expression list with known \
\\\"variable\\\" names.\n\nThe expression list is assumed to\nevaluate to a \
numeric vector of constant length for any argument values.\>\"", "\n", "  ", 
     ",", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"Null", "\n", "\n", ";", " ", 
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "ExpressionList", ",", " ", "expression", ",", " ", "arguments"}], 
         "]"}]}]}], "\n", "\n", 
      RowBox[{"(*", " ", 
       RowBox[{"^", 
        RowBox[{"^", " ", 
         RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], " ", "]"}]}], "\n", 
    "  ", "]"}], ";"}]}]], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"RIFunctionMakeFromExpressionList", "[", "\n", "  ", 
       RowBox[{"expression_List", "\n", "  ", ",", " ", "arguments_List", " ", 
        RowBox[{"(*", " ", "optimization", " ", "*)"}], "\n", "  ", ",", " ", 
        "outputs_List"}], "]"}], " ", "/;", " ", 
      RowBox[{"outputs", " ", "==", " ", 
       RowBox[{"FMMakeListDomainNames", "@", 
        RowBox[{"Length", "@", "expression"}]}]}]}], " ", "\n", "  ", ",", 
     "\"\<with user-named arguments\>\"", "\n", "  ", ",", 
     RowBox[{"RIFunctionMakeFromExpressionList", "[", 
      RowBox[{"expression", ",", " ", "arguments"}], "]"}]}], "\n", "]"}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionMakeFromExpressionList", "[", "\n", "    ", 
      RowBox[{
      "expression_List", "\n", "  ", ",", " ", "arguments_List", "\n", "  ", 
       ",", " ", "outputs_List"}], "]"}], " ", "\n", "  ", ",", " ", 
     "\"\<with user-named outputs\>\"", "\n", "  ", ",", "  ", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "ExpressionList", ",", " ", "expression", ",", " ", "arguments", ",", 
       " ", "outputs"}], "]"}]}], "\n", "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"RIFunctionMakeComposition", "[", 
       RowBox[{"f_RIFunction", ",", " ", "g_RIFunction"}], "]"}], " ", "/;", 
      " ", 
      RowBox[{
       RowBox[{"Length", "@", 
        RowBox[{"RIFunctionOutputs", "@", "g"}]}], " ", "==", "\n", "    ", 
       RowBox[{"Length", "@", 
        RowBox[{"RIFunctionArguments", "@", "f"}]}]}]}], " ", "\n", "  ", 
     ",", "\"\<f\[Degree]g\>\"", "\n", "  ", ",", 
     RowBox[{"RIFunction", "[", 
      RowBox[{"Composition", ",", " ", "f", ",", " ", "g"}], "]"}]}], "\n", 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionMakeSelector", "[", "\n", "  ", 
      RowBox[{
       RowBox[{"s_FiniteMapping", "?", "FMInjectiveQ"}], ",", "\n", "  ", 
       "b_List"}], "]"}], " ", "\n", "  ", ",", 
     "\"\<Create a selector function from injective s: A -> B\n\nNote: Since \
s only stores A and s(A), B, the full set of argument variable names\n must \
be given explicitly.\n\nA names the output variables, which may be different \
or the same as the input variables.\n\nThe order of b does not matter (TODO \
verify: doesn't b define how inputs are interpreted?)\>\"", "\n", "  ", ",", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", 
          RowBox[{"FMDomain", "@", "s"}]}], ",", 
         RowBox[{"sa", "=", 
          RowBox[{"FMEvaluateAll", "@", "s"}]}]}], "}"}], ",", "\n", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"saIndex", " ", "=", " ", 
          RowBox[{"Positions", "[", 
           RowBox[{"b", ",", " ", "sa"}], "]"}]}], "}"}], "~", "With", "~", 
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Selector", ",", " ", "a", ",", " ", "b", ",", " ", "saIndex"}], 
         "]"}]}]}], "\n", "]"}]}], "\n", "  ", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionMakeSelector", "[", "\n", "  ", 
      RowBox[{"a_List", ",", "\n", "  ", "b_List"}], "]"}], " ", "\n", "  ", 
     ",", 
     "\"\<Special constructor, where each a maps to itself: This creates a\n\n\
e.g. RIFunctionMakeSelector[{y, x}, {x, y}]\ncreates the 2 argument function \
that flips its arguments.\>\"", "\n", "  ", ",", "    ", 
     RowBox[{"RIFunctionMakeSelector", "[", " ", 
      RowBox[{
       RowBox[{"FiniteMappingMakeFromLists", "[", 
        RowBox[{"a", ",", "a"}], "]"}], ",", " ", "b"}], "]"}]}], "\n", "  ", 
    "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "J", "\n", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", 
        "___"}], "]"}]}], "]"}], " ", ",", "\"\<J\>\"", ",", " ", 
    RowBox[{"FMMakeListDomainNames", "@", 
     RowBox[{"Length", "@", "expr"}]}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"f", " ", ":", " ", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", " ", 
        "outputs_List"}], "]"}]}], "]"}], " ", ",", "\"\<J\>\"", ",", " ", 
    "outputs"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
       "saIndex_List"}], "]"}], "]"}], " ", ",", "\"\<J\>\"", ",", " ", "a"}],
    "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
       "pairing_"}], "]"}], "]"}], " ", ",", "\"\<J\>\"", ",", "\n", "    ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"FMDomain", "@", "components"}]}], ",", " ", 
        RowBox[{"is", " ", "=", " ", 
         RowBox[{"RIFunctionOutputs", " ", "/@", " ", 
          RowBox[{"FMEvaluateAll", "@", "components"}]}]}]}], "}"}], ",", 
      "\n", "      ", 
      RowBox[{"pairing", "@@@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Thread", " ", "/@", "\n", "          ", 
          RowBox[{"Transpose", "@", 
           RowBox[{"{", 
            RowBox[{"k", ",", " ", "is"}], "}"}]}]}], ",", " ", "1"}], 
        "]"}]}]}], "\n", "    ", "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "TODO", " ", "can", " ", "probably", " ", "be", " ", "simplified", " ", 
     "with", " ", 
     RowBox[{"Tuples", "[", 
      RowBox[{"{", "}"}], "]"}]}], " ", "*)"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Repeated", ",", " ", "f_RIFunction", ",", " ", "p_List", ",", " ", 
       "pairing_"}], "]"}], "]"}], " ", ",", "\"\<J\>\"", ",", " ", 
    RowBox[{"pairing", "@@@", 
     RowBox[{"Tuples", "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", " ", 
        RowBox[{"RIFunctionOutputs", "@", "f"}]}], "}"}]}]}]}], "\n", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", "  ", 
   RowBox[{
    RowBox[{"RIFunctionOutputs", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
      "]"}], "]"}], " ", ",", "\"\<J\>\"", ",", " ", 
    RowBox[{"RVVVariables", "@", "output"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionOutputs", "@", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
       "]"}]}], " ", ",", "\"\<J\>\"", ",", " ", 
     RowBox[{"RIFunctionOutputs", "@", "f"}]}], "\n", "]"}], ";"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "I", "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionArguments", "@", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
      "]"}]}], " ", ",", "\"\<I\>\"", ",", " ", 
    RowBox[{"RIFunctionArguments", "@", "g"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionArguments", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", " ", 
       "___"}], "]"}], "]"}], " ", ",", "\"\<I\>\"", ",", " ", "vars"}], "\n",
    "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionArguments", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
       "saIndex_List"}], "]"}], "]"}], " ", ",", "\"\<I\>\"", ",", " ", "b"}],
    "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionArguments", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
       "pairing_"}], "]"}], "]"}], " ", ",", "\"\<I\>\"", ",", "\n", "    ", 
    RowBox[{"RIFunctionArguments", "@", 
     RowBox[{"First", "@", 
      RowBox[{"FMEvaluateAll", "@", "components"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "TODO", " ", "surely", " ", "can", " ", "be", " ", "done", " ", "more", 
     " ", "efficiently"}], " ", "*)"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionArguments", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Repeated", ",", " ", "f_RIFunction", ",", " ", "p_List", ",", " ", 
       "pairing_"}], "]"}], "]"}], " ", ",", "\"\<I\>\"", ",", " ", 
    RowBox[{"pairing", "@@@", 
     RowBox[{"Tuples", "@", 
      RowBox[{"{", 
       RowBox[{"p", ",", " ", 
        RowBox[{"RIFunctionArguments", "@", "f"}]}], "}"}]}]}]}], "\n", "]"}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionArguments", "[", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
       "]"}], "]"}], " ", ",", "\"\<I\>\"", ",", " ", "inputs"}], "\n", "]"}],
    ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "Return", " ", "a", " ", "list", " ", "of", " ", "expression", " ", 
     "that"}], ",", " ", 
    RowBox[{
    "when", " ", "all", " ", "variables", " ", "in", " ", "I", " ", "are", 
     " ", "defined", " ", "to", "\n", "real", " ", "numbers"}], ",", " ", 
    RowBox[{
    "evaluates", " ", "to", " ", "a", " ", "NumericVector", " ", "of", " ", 
     "length", " ", "#J", "\n", "\n", "Note", " ", "that", " ", "this", " ", 
     "loses", " ", "the", " ", "names", " ", "of", " ", 
     RowBox[{"outputs", "."}]}]}], "\n", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionExpressionList", "@", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
      "]"}]}], " ", ",", 
    "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", "\n", "    ", 
    RowBox[{
     RowBox[{"RIFunctionExpressionList", "@", "f"}], " ", "/.", " ", 
     RowBox[{"Thread", "@", 
      RowBox[{"Rule", "[", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], ",", " ", 
        RowBox[{"RIFunctionExpressionList", "@", "g"}]}], "]"}]}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"re", "-", 
     RowBox[{"enforce", " ", "J", " ", "argument", " ", "names"}]}], " ", 
    "*)"}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionExpressionList", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", 
       "___"}], "]"}], "]"}], " ", ",", 
    "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", " ", "expr"}], "\n", "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionExpressionList", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
       "saIndex_List"}], "]"}], "]"}], " ", ",", 
    "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", " ", 
    RowBox[{"b", "[", 
     RowBox[{"[", "saIndex", "]"}], "]"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionExpressionList", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
      "]"}], "]"}], " ", ",", 
    "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", " ", 
    RowBox[{"RVVValues", "@", "output"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionExpressionList", "[", 
     RowBox[{"RIFunction", "[", 
      RowBox[{
      "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
       "pairing_"}], "]"}], "]"}], " ", ",", 
    "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", "\n", "    ", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RIFunctionExpressionList", " ", "/@", " ", 
       RowBox[{"FMEvaluateAll", "@", "components"}]}], ",", " ", "1"}], 
     "]"}]}], "\n", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionExpressionList", "[", 
      RowBox[{"RIFunction", "[", 
       RowBox[{
       "Repeated", ",", " ", "f_RIFunction", ",", " ", "ps_List", ",", " ", 
        "pairing_"}], "]"}], "]"}], " ", ",", 
     "\"\<Return a list of expression that, when all variables in I are \
defined to real numbers, evaluates to a NumericVector of length #J  Note that \
this loses the names of outputs.\>\"", ",", "\n", "    ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"el", "=", 
        RowBox[{"RIFunctionExpressionList", "@", "f"}]}], "}"}], "~", "With", 
      "~", 
      RowBox[{"Flatten", "[", "\n", "      ", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"el", " ", "/.", " ", 
           RowBox[{"Thread", "@", 
            RowBox[{"Rule", "[", 
             RowBox[{
              RowBox[{"RIFunctionArguments", "@", "f"}], ",", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "TODO", " ", "this", " ", "is", " ", "problematic", " ", 
                "when", " ", "variable", " ", "names", " ", "are", " ", 
                "lists", " ", "because", " ", "of", " ", "Listable", " ", 
                "operations"}], "*)"}], "\n", "        ", 
              RowBox[{"(*", " ", 
               RowBox[{"make", " ", "pair", " ", "indices"}], "*)"}], "\n", 
              "        ", 
              RowBox[{
               RowBox[{
                RowBox[{"pairing", "[", 
                 RowBox[{"p", ",", "#"}], "]"}], "&"}], "/@", 
               RowBox[{"RIFunctionArguments", "@", "f"}]}]}], "\n", "      ", 
             "]"}]}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", "ps"}], "}"}]}], "]"}], ",", " ", "1"}], 
       "]"}]}]}], "\n", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"TODO", "  ", "->", " ", 
    RowBox[{"ability", " ", "to", " ", "evaluate", " ", 
     RowBox[{"symbolically", "?"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}]}]}], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionOutputExpressionMap", "[", "f_RIFunction", "]"}], 
     "\n", "  ", ",", 
     "\"\<Return a FiniteMapping from output variable names to expressions.\n\
\nAn equivalent RIFunction could be reconstructed from this, albeit less \
optimized.\>\"", "\n", "  ", ",", 
     RowBox[{"FiniteMappingMakeFromLists", "[", 
      RowBox[{
       RowBox[{"RIFunctionOutputs", "@", "f"}], ",", " ", 
       RowBox[{"RIFunctionExpressionList", "@", "f"}]}], "]"}]}], "\n", "]"}],
    ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"^", 
    RowBox[{"^", " ", 
     RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]}]}], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "\n", 
   RowBox[{
    RowBox[{
    "TODO", " ", "not", " ", "all", " ", "arguments", " ", "need", " ", "to", 
     " ", "be", " ", "specified", "\n", "TODO", " ", "does", " ", "the", " ", 
     "order", " ", "in", " ", "the", " ", "RVarval", " ", 
     RowBox[{"matter", "?", "\n", "TODO"}], " ", "What", " ", "if", " ", 
     "the", " ", "amount", " ", "of", " ", "arguments", " ", "is", " ", 
     "correct", " ", "but", " ", "not", " ", "the", " ", "names", " ", "of", 
     " ", 
     RowBox[{"them", "?", "\n", "\n", "TODO"}], " ", "some", " ", "of", " ", 
     "these", " ", "could", " ", "be", " ", "implemented", " ", "using", " ", 
     "the", " ", "Nameless", " ", "variant"}], ",", " ", 
    RowBox[{
    "then", " ", "adding", " ", "the", " ", "names", " ", "in", " ", "the", 
     " ", "end", "\n", " ", "when", " ", "will", " ", "this", " ", "be", " ", 
     RowBox[{"faster", "?"}]}]}], "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionEvaluate", "[", 
      RowBox[{
       RowBox[{"RIFunction", "[", 
        RowBox[{
        "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
        "]"}], ",", " ", "args_RVarval"}], "]"}], "\n", "  ", ",", 
     "\"\<f(args)\>\"", "\n", "  ", ",", "\n", "    ", 
     RowBox[{"(", "\n", "      ", 
      RowBox[{"f", "~", "RIFunctionEvaluate", "~", 
       RowBox[{"RVarvalMake", "[", 
        RowBox[{
         RowBox[{"RIFunctionArguments", "@", "f"}], ",", " ", 
         RowBox[{"RVVValues", "@", 
          RowBox[{"RIFunctionEvaluate", "[", 
           RowBox[{"g", ",", " ", "args"}], "]"}]}]}], "]"}]}], "\n", "    ", 
      ")"}]}], "\n", "    ", "]"}], ";"}]}]], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionEvaluate", "[", 
      RowBox[{
       RowBox[{"RIFunction", "[", 
        RowBox[{
        "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
        "]"}], ",", " ", "_"}], "]"}], " ", ",", "\"\<\>\"", ",", " ", 
     "output"}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionEvaluate", "[", "\n", "\n", 
      RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
      RowBox[{
       RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", ",", " ", 
       RowBox[{"f", " ", ":", " ", 
        RowBox[{"RIFunction", "[", 
         RowBox[{"ExpressionList", ",", " ", "expr_", ",", " ", "vars_List"}],
          "]"}]}], "\n", ",", " ", "args_RVarval"}], "\n", 
      RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], ",", "\"\<\>\"", 
     ",", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"Null", "\n", "\n", ";", " ", 
        RowBox[{"RVarvalMake", "[", 
         RowBox[{"expr", " ", "/.", " ", 
          RowBox[{"RVVAsRules", "@", "args"}]}], "]"}]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"TODO", " ", "compare"}], " ", "/.", " ", 
         RowBox[{
         "with", " ", "other", " ", "ways", " ", "of", " ", "inserting", " ", 
          "values"}]}], ",", " ", 
        RowBox[{
        "Block", " ", "is", " ", "probably", " ", "more", " ", "efficient", 
         " ", "but", " ", "error", " ", 
         RowBox[{"prone", "?"}]}]}], " ", "*)"}], "\n", "\n", "]"}]}], "\n", 
    "  ", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionEvaluate", "[", " ", 
     RowBox[{
      RowBox[{"f", " ", ":", " ", 
       RowBox[{"RIFunction", "[", 
        RowBox[{
        "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", 
         "outputs_List"}], "]"}]}], "\n", "  ", ",", " ", "args_RVarval"}], 
     "]"}], " ", "\n", "  ", ",", "\"\<\>\"", "\n", "  ", ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"Null", "\n", "\n", ";", " ", 
       RowBox[{"RVarvalMake", "[", 
        RowBox[{"outputs", ",", " ", 
         RowBox[{"expr", " ", "/.", " ", 
          RowBox[{"RVVAsRules", "@", "args"}]}]}], "]"}]}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"TODO", " ", "compare"}], " ", "/.", " ", 
        RowBox[{
        "with", " ", "other", " ", "ways", " ", "of", " ", "inserting", " ", 
         "values"}]}], ",", " ", 
       RowBox[{
       "Block", " ", "is", " ", "probably", " ", "more", " ", "efficient", 
        " ", "but", " ", "error", " ", 
        RowBox[{"prone", "?"}]}]}], " ", "*)"}], "\n", "\n", "]"}]}], "\n", 
   "  ", "]"}], ";"}]}], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"(", 
      RowBox[{"pairing", "[", 
       RowBox[{"k", ",", " ", "j"}], "]"}], ")"}]}], " ", "=", " ", 
    RowBox[{"c_k", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"(", "j", ")"}]}]}], " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionEvaluate", "[", "\n", "\n", 
      RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
      RowBox[{
       RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
       RowBox[{"f", " ", ":", " ", 
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
          "pairing_"}], "]"}]}], "\n", "  ", ",", " ", "args_RVarval"}], "\n", 
      RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", ",", 
     "\"\<\>\"", ",", " ", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", " ", "=", " ", 
         RowBox[{"FMDomain", "@", "components"}]}], "}"}], ",", "\n", "\n", 
       "  ", 
       RowBox[{"RVarvalMakePairIndexed", "[", 
        RowBox[{"k", ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "~", "RIFunctionEvaluate", "~", "args"}], " ", "&"}], 
          " ", "/@", " ", 
          RowBox[{"FMEvaluateAll", "@", "components"}]}], ",", " ", 
         "pairing"}], "]"}]}], "\n", "\n", "  ", "]"}]}], "\n", "  ", "]"}], 
   ";"}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"select", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"(", "a", ")"}]}], " ", "=", " ", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"s", 
       RowBox[{"(", "a", ")"}]}], ")"}]}]}], "  ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{"RIFunctionEvaluate", "[", "\n", "\n", 
       RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
       RowBox[{
        RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
          "saIndex_List"}], "]"}], "\n", "  ", ",", " ", "args_RVarval"}], 
       "\n", 
       RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", "/;", " ", 
      RowBox[{
       RowBox[{"RVVLength", "@", "args"}], " ", "==", " ", 
       RowBox[{"Length", "@", "b"}]}]}], " ", ",", "\"\<\>\"", ",", " ", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\n", "  ", 
       RowBox[{"RVarvalMake", "[", 
        RowBox[{"a", ",", " ", 
         RowBox[{"RVVLookupByVarIndices", "[", 
          RowBox[{"args", ",", " ", "saIndex"}], "]"}]}], "]"}]}], "\n", "\n",
       "]"}]}], "\n", "  ", "]"}], ";"}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{
       "RIFunctionEvaluate", "                                         ", "[",
         "\n", "\n", 
        RowBox[{"(*", " ", "Arguments", " ", "*)"}], 
        "                                            ", 
        RowBox[{
         RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", ",", " ", 
         RowBox[{"RIFunction", "[", 
          RowBox[{
          "Repeated", ",", " ", "f_RIFunction", ",", " ", "ps_List", ",", " ",
            "pairing_"}], "]"}], "\n", ",", " ", "args_RVarval"}], "\n", "\n", 
        RowBox[{"(*", " ", "Conditions", " ", "*)"}], 
        "                                             ", "]"}], " ", "/;", 
       "\n", "\n", 
       RowBox[{
        RowBox[{"RVVLength", "@", "args"}], " ", "==", " ", 
        RowBox[{
         RowBox[{"Length", "@", "ps"}], " ", "*", " ", 
         RowBox[{"Length", "@", 
          RowBox[{"RIFunctionArguments", "@", "f"}]}]}]}]}], "    ", "\n", 
      "  ", ",", "\"\<Evaluate f: P x A -> P x B\>\"", ",", "\n", "\n", 
      RowBox[{"(*", " ", "Code", " ", "*)"}], "\n", "\n", "  ", 
      RowBox[{"RVarvalMakePairIndexed", "[", 
       RowBox[{
        RowBox[{"Sequence", "[", "]"}], "\n", "    ", ",", " ", "ps", "\n", 
        "\n", "    ", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Sequence", "[", "]"}], "\n", "\n", "      ", ",", " ", 
          RowBox[{"f", "~", "RIFunctionEvaluate", "~", 
           RowBox[{"RVarvalSlicePairIndexed", "[", 
            RowBox[{"args", ",", " ", "p", ",", " ", "pairing"}], "]"}]}], 
          "\n", "\n", "      ", ",", " ", 
          RowBox[{"{", 
           RowBox[{"p", ",", "ps"}], "}"}]}], "\n", "\n", "      ", "]"}], 
        "\n", "\n", "    ", ",", " ", "pairing"}], "\n", "  ", "]"}]}], "\n", 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"^", 
     RowBox[{"^", " ", 
      RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "TODO", " ", "allow", " ", "constructing", " ", "matrix", " ", "output"}], 
   " ", "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionEvaluateNameless", "[", 
       RowBox[{
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Composition", ",", " ", "f_RIFunction", ",", " ", "g_RIFunction"}], 
         "]"}], ",", " ", 
        RowBox[{"vals_", "?", "NumericVectorQ"}]}], "]"}], " ", "\n", "  ", 
      ",", "\"\<[f]([args])\n\nall args need to be specified\>\"", "\n", "  ",
       ",", "\n", "    ", 
      RowBox[{"(", "\n", "      ", 
       RowBox[{"f", "~", "RIFunctionEvaluateNameless", "~", 
        RowBox[{"(", 
         RowBox[{"g", "~", "RIFunctionEvaluateNameless", "~", "vals"}], 
         ")"}]}], "\n", "    ", ")"}]}], "\n", "    ", "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateNameless", "[", "\n", "\n", 
        RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
        RowBox[{
         RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
         RowBox[{"f", " ", ":", " ", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "ExpressionList", ",", " ", "expr_List", ",", " ", "vars_List", 
            ",", " ", "___"}], "]"}]}], "\n", "  ", ",", " ", 
         RowBox[{"vals_", "?", "NumericVectorQ"}]}], "\n", "\n", 
        RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"Length", "@", "vals"}], " ", "==", " ", 
        RowBox[{"Length", "@", "vars"}]}]}], ",", "\"\<\>\"", ",", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", 
        RowBox[{"Null", "\n", "\n", ";", " ", 
         RowBox[{"expr", " ", "/.", " ", 
          RowBox[{"Thread", "@", 
           RowBox[{"Rule", "[", 
            RowBox[{"vars", ",", " ", "vals"}], "]"}]}]}]}]}], "\n", "]"}]}], 
     "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateNameless", "[", "\n", "  ", 
        RowBox[{
         RowBox[{"RIFunction", "[", 
          RowBox[{
          "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
           "saIndex_List"}], "]"}], "\n", "  ", ",", " ", 
         RowBox[{"vals_", "?", "NumericVectorQ"}]}], "\n", "]"}], " ", "/;", 
       " ", 
       RowBox[{
        RowBox[{"Length", "@", "vals"}], " ", "==", " ", 
        RowBox[{"Length", "@", "b"}]}]}], " ", ",", "\"\<\>\"", ",", " ", 
      RowBox[{"vals", "[", 
       RowBox[{"[", "saIndex", "]"}], "]"}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateNameless", "[", "\n", "  ", 
        RowBox[{
         RowBox[{"RIFunction", "[", 
          RowBox[{
          "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
           "pairing_"}], "]"}], "\n", "  ", ",", " ", 
         RowBox[{"vals_", "?", "NumericVectorQ"}]}], "\n", "]"}], " ", "/;", 
       " ", 
       RowBox[{
        RowBox[{"Length", "@", "vals"}], " ", "==", " ", 
        RowBox[{"Length", "@", 
         RowBox[{"RIFunctionArguments", "@", 
          RowBox[{"First", "@", 
           RowBox[{"FMEvaluateAll", "@", "components"}]}]}]}]}]}], " ", ",", 
      "\"\<\>\"", ",", "\n", "  ", 
      RowBox[{"Flatten", "[", "\n", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"RIFunctionEvaluateNameless", "[", 
           RowBox[{"#", ",", " ", "vals"}], "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"FMEvaluateAll", "@", "components"}]}], "\n", "\n", "  ", 
        ",", "1"}], "]"}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionEvaluateNameless", "[", 
       RowBox[{
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
         "]"}], ",", " ", "_"}], "]"}], " ", ",", "\"\<\>\"", ",", " ", 
      RowBox[{"RVVValues", "@", "output"}]}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", " ", 
     RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", "Name", " ", "*)"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{
      RowBox[{
      "RIFunctionEvaluateNameless", 
       "                                         ", "[", "\n", "\n", 
       RowBox[{"(*", " ", "Arguments", " ", "*)"}], 
       "                                            ", 
       RowBox[{
        RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", ",", " ", 
        RowBox[{"RIFunction", "[", 
         RowBox[{
         "Repeated", ",", " ", "f_RIFunction", ",", " ", "ps_List", ",", " ", 
          "pairing_"}], "]"}], "\n", ",", " ", 
        RowBox[{"vals_", "?", "NumericVectorQ"}]}], "\n", "\n", 
       RowBox[{"(*", " ", "Conditions", " ", "*)"}], 
       "                                             ", "]"}], " ", "/;", 
      "\n", "\n", 
      RowBox[{
       RowBox[{"Length", "@", "vals"}], " ", "==", " ", 
       RowBox[{
        RowBox[{"Length", "@", "ps"}], " ", "*", " ", 
        RowBox[{"Length", "@", 
         RowBox[{"RIFunctionArguments", "@", "f"}]}]}]}]}], "\n", "  ", ",", 
     "\"\<Evaluate f: P x A -> P x B for unnamed arguments (assumed \
order)\>\"", ",", "\n", "    ", 
     RowBox[{"Flatten", "[", "\n", "      ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "~", "RIFunctionEvaluateNameless", "~", "#"}], " ", 
         "&"}], " ", "/@", " ", 
        RowBox[{"Partition", "[", 
         RowBox[{"vals", ",", " ", 
          RowBox[{"Length", "@", 
           RowBox[{"RIFunctionArguments", "@", "f"}]}]}], "]"}]}], "\n", ",", 
       "1"}], "\n", "]"}]}], "\n", "  ", "]"}], ";"}], "\n", "\n", 
  "\n"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "TODO", " ", "Check", " ", "that", " ", "x", " ", "is", " ", "one", " ", 
    "of", " ", "Arguments"}], " ", "*)"}], "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "TODO", " ", "this", " ", "might", " ", "not", " ", "always", " ", "work",
      " ", "correctly", "\n", "TODO", " ", "in", " ", "particular"}], ",", 
    " ", 
    RowBox[{
    "this", " ", "does", " ", "nto", " ", "yet", " ", "support", " ", "named",
      " ", "outputs"}], ",", " ", 
    RowBox[{
     RowBox[{
     "but", " ", "none", " ", "of", " ", "the", " ", "methods", " ", "do", 
      " ", "except", " ", "Selector", " ", 
      RowBox[{"(", 
       RowBox[{"and", " ", "thus", " ", "Composed"}], ")"}]}], "..."}]}], 
   "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", "\n", "\n", 
        RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
        RowBox[{
         RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
         "f_RIFunction", "\n", "  ", ",", " ", "x_"}], "\n", 
        RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "x"}]}], "\n", "\n", "  ", ",", "\"\<df\n--\ndx\n\nd_x f\>\"", "\n", 
      "\n", "  ", ",", 
      RowBox[{"RIFunctionMakeFromExpressionList", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"1.", " ", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"RIFunctionExpressionList", "@", "f"}], ",", " ", "x"}], 
          "]"}]}], "\n", "  ", ",", " ", 
        RowBox[{"RIFunctionArguments", "@", "f"}], "\n", "  ", ",", " ", 
        RowBox[{"RIFunctionOutputs", "@", "f"}]}], "]"}]}], " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "TODO", " ", "instead", " ", "of", " ", "creating", " ", "an", " ", 
        "FMMakeListDomainNames", " ", "here", " ", "and", " ", "removing", 
        " ", "it", " ", "later"}], ",", " ", 
       RowBox[{
        RowBox[{"don", "'"}], "t", " ", "create", " ", "it"}]}], " ", "*)"}], 
     "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", 
        RowBox[{
         RowBox[{"f", ":", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "Constant", ",", " ", "inputs_List", ",", " ", "output_RVarval"}], 
           "]"}]}], ",", " ", "x_"}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "x"}]}], "\n", "\n", "  ", ",", "\"\<df\n--\ndx\n\nd_x f\>\"", "\n", 
      "\n", "    ", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"outputzeros", " ", "=", " ", 
         RowBox[{"RVarvalMakeConstant", "[", 
          RowBox[{
           RowBox[{"RVVVariables", "@", "output"}], ",", " ", "0."}], "]"}]}],
         "}"}], "~", "With", "~", 
       RowBox[{"RIFunction", "[", 
        RowBox[{"Constant", ",", " ", "inputs", ",", " ", "outputzeros"}], 
        "]"}]}]}], "\n", "  ", "]"}], ";"}], "\n", 
   RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", 
        RowBox[{
         RowBox[{"f", ":", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "Multiple", ",", " ", "components_FiniteMapping", ",", " ", 
            "pairing_"}], "]"}]}], ",", " ", "x_"}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "x"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", "    ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dcomponents", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"RIFunctionMakeDerivative", "[", 
            RowBox[{"#", ",", "x"}], "]"}], "&"}], "~", "FMMapValues", "~", 
          "components"}]}], "}"}], " ", "~", "With", "~", " ", 
       RowBox[{"RIFunction", "[", 
        RowBox[{"Multiple", ",", " ", "dcomponents", ",", " ", "pairing"}], 
        "]"}]}]}], "\n", "]"}], ";"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", ":", " ", "B"}], " ", "->", " ", "A"}], ",", " ", 
     RowBox[{
     "where", " ", "A", " ", "are", " ", "selected", " ", "from", " ", "B", 
      " ", "according", " ", "to", " ", "saIndex", " ", "which", " ", "has", 
      " ", "no", " ", "repeated", " ", 
      RowBox[{"values", ".", "\n", "\n", "Thus"}], " ", "the", " ", 
      "derivative", " ", "is", " ", "a", " ", "constant", " ", "vector", " ", 
      "of", " ", "length", " ", "A", " ", "with", " ", "a", " ", "1.", " ", 
      "only", " ", "for", " ", "x"}]}], "\n", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", 
        RowBox[{
         RowBox[{"f", ":", " ", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "Selector", ",", " ", "a_List", ",", " ", "b_List", ",", " ", 
            "saIndex_List"}], "]"}]}], ",", " ", "x_"}], "]"}], " ", "/;", 
       " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "x"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"indexOfXInB", " ", "=", " ", 
          RowBox[{"First", "@", 
           RowBox[{"First", "@", 
            RowBox[{"Position", "[", 
             RowBox[{"b", ",", " ", "x"}], "]"}]}]}]}], "}"}], ",", "\n", 
        "\n", "    ", 
        RowBox[{"b", "~", "RIFunctionMakeConstant", "~", 
         RowBox[{"RVarvalMake", "[", 
          RowBox[{"a", ",", "\n", "      ", 
           RowBox[{"SparseArray", "[", "\n", "        ", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"1.", " ", 
                RowBox[{"Boole", "[", 
                 RowBox[{"#", " ", "===", " ", "indexOfXInB"}], "]"}]}], " ", 
               "&"}], ",", " ", "saIndex"}], "]"}], " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "TODO", " ", "could", " ", "be", " ", "constructed", " ", "more",
               " ", "efficiently", " ", "with", " ", "a", " ", "single", " ", 
              "or", " ", "no", " ", "rule"}], " ", "*)"}], "\n", "      ", 
            "]"}]}], "\n", "    ", "]"}]}]}], "\n", "\n", "]"}]}], "\n", "  ",
      "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", " ", 
     RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"TODO", " ", "indexed", " ", 
    RowBox[{"variants", "?"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateDerivative", "[", 
        RowBox[{"f_RIFunction", ",", " ", "i_", ",", " ", "args_RVarval"}], 
        "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "i"}]}], "\n", "  ", ",", 
      "\"\<These might be more or less efficient for just evaluating the \
derivative once or multiple times.\>\"", ",", "\n", "  ", 
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", 
        RowBox[{"f", ",", " ", "i"}], "]"}], "~", "RIFunctionEvaluate", "~", 
       "args"}]}], "\n", "  ", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateMultiDerivative", "[", 
        RowBox[{
        "f_RIFunction", ",", " ", "y_List", ",", " ", "args_RVarval"}], "]"}],
        " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "ContainsAll", "~", 
        "y"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", "  ", 
      RowBox[{
       RowBox[{"RIFunctionMakeMultiDerivative", "[", 
        RowBox[{"f", ",", " ", "y"}], "]"}], "~", "RIFunctionEvaluate", "~", 
       "args"}]}], "\n", "  ", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateDerivativeNameless", "[", 
        RowBox[{"f_RIFunction", ",", " ", "i_", ",", " ", 
         RowBox[{"args_", "?", "NumericVectorQ"}]}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "Contains", "~", 
        "i"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", "    ", 
      RowBox[{
       RowBox[{"RIFunctionMakeDerivative", "[", 
        RowBox[{"f", ",", " ", "i"}], "]"}], "~", 
       "RIFunctionEvaluateNameless", "~", "args"}]}], "\n", "  ", "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateMultiDerivativeNameless", "[", 
        RowBox[{"f_RIFunction", ",", " ", "y_List", ",", " ", 
         RowBox[{"args_", "?", "NumericVectorQ"}]}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "f"}], "~", "ContainsAll", "~", 
        "y"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", "    ", 
      RowBox[{
       RowBox[{"RIFunctionMakeMultiDerivative", "[", 
        RowBox[{"f", ",", " ", "y"}], "]"}], "~", 
       "RIFunctionEvaluateNameless", "~", "args"}]}], "\n", "  ", "]"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", " ", "indexed", " ", "variant"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateDerivative", "[", 
        RowBox[{
         RowBox[{"fg", " ", ":", " ", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "Composition", ",", " ", "f_RIFunction", ",", " ", 
            "g_RIFunction"}], "]"}]}], ",", "\n", "  ", "i_", ",", "\n", "  ",
          "x_RVarval"}], "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "fg"}], "~", "Contains", "~", 
        "i"}]}], "\n", "\n", "  ", ",", 
      "\"\<generalized chain rule :\n\nLet\n\ng: I -> J\nf: J -> K\n\nthen h \
:= f \[Degree] g\n\nand\n\nd_i h x = sum_j d_j f (g x) * (d_i g x)_j\n\nNote \
that 'd_j f (g x)' is a K-vector, d_i g x is a J-vector\n\nthis is analoguous \
to how you would usually multiply the jacobian of f with the derivative \
vector of g\n (or the jacobian in the -Multiple case)\>\"", "\n", "\n", "\n", 
      "\n", "  ", ",", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\n", "  ", 
         RowBox[{"r", "\n", "  ", ",", " ", 
          RowBox[{"gx", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"g", "~", "RIFunctionEvaluate", "~", "x"}], ")"}], "~", 
            "RVVRename", "~", 
            RowBox[{"RIFunctionArguments", "@", "f"}]}]}], "\n", "  ", ",", 
          " ", 
          RowBox[{"digx", " ", "=", " ", 
           RowBox[{
            RowBox[{"RIFunctionEvaluateDerivative", "[", 
             RowBox[{"g", ",", " ", "i", ",", " ", "x"}], "]"}], "~", 
            "RVVRename", "~", 
            RowBox[{"RIFunctionArguments", "@", "f"}]}]}]}], "\n", "}"}], ",",
         " ", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "must", " ", "force", " ", "this", " ", "to", " ", "be", " ", 
           "named", " ", "according", " ", "to", " ", "J"}], ",", " ", 
          RowBox[{"cuz", " ", "we", " ", 
           RowBox[{"don", "'"}], "t", " ", "enforce", " ", "this", " ", 
           "earlier"}]}], " ", "*)"}], "\n", "\n", "  ", 
        RowBox[{
         RowBox[{"Print", "@", "gx"}], ";", "\n", "  ", 
         RowBox[{"Print", "@", "digx"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{"compute", " ", "each", " ", "d_jf", 
           RowBox[{"(", "gx", ")"}], " ", "*", " ", 
           RowBox[{"(", "digx", ")"}], "_j"}], " ", "*)"}], "\n", "  ", 
         RowBox[{"r", " ", "=", " ", 
          RowBox[{"Table", "[", "\n", "\n", "    ", 
           RowBox[{
            RowBox[{
             RowBox[{"Print", "@", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", 
                RowBox[{"RIFunctionEvaluateDerivative", "[", 
                 RowBox[{"f", ",", " ", "j", ",", " ", "gx"}], "]"}], ",", 
                " ", "\"\<*\>\"", ",", 
                RowBox[{"digx", "~", "RVVLookupVar", "~", "j"}]}], "}"}]}], 
             ";", "\n", "    ", 
             RowBox[{
              RowBox[{"RIFunctionEvaluateDerivative", "[", 
               RowBox[{"f", ",", " ", "j", ",", " ", "gx"}], "]"}], "~", 
              "RVVScale", "~", 
              RowBox[{"(", 
               RowBox[{"digx", "~", "RVVLookupVar", "~", "j"}], ")"}]}]}], 
            "\n", "\n", "    ", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", 
              RowBox[{"RIFunctionArguments", "@", "f"}]}], "}"}]}], "\n", 
           "\n", "  ", "]"}]}], ";", "\n", "\n", "  ", 
         RowBox[{"Print", "@", "r"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", " ", "Dot", " ", "*)"}], "\n", "  ", 
         RowBox[{"Fold", "[", "\n", "    ", 
          RowBox[{"RVVPlus", ",", " ", "r"}], "\n", "  ", "]"}]}]}], "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "todo", " ", "could", " ", "use", " ", "evaluate", " ", "derivative",
           " ", "multiple"}], ",", " ", 
         RowBox[{
         "retrieve", " ", "a", " ", "matrix", " ", "and", " ", "or", " ", 
          "do", " ", 
          RowBox[{"a", " ", "'"}], "matrix", " ", "multiplication", " ", 
          "via", " ", "RVarval"}]}], " ", "*)"}], "\n", "\n", "]"}]}], "\n", 
     "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{
       RowBox[{"RIFunctionEvaluateDerivativeNameless", "[", "\n", "  ", 
        RowBox[{
         RowBox[{"fg", " ", ":", " ", 
          RowBox[{"RIFunction", "[", 
           RowBox[{
           "Composition", ",", " ", "f_RIFunction", ",", " ", 
            "g_RIFunction"}], "]"}]}], "\n", "  ", ",", " ", "i_", "\n", "  ",
          ",", 
         RowBox[{"x_", "?", "NumericVectorQ"}]}], "\n", "]"}], " ", "/;", " ", 
       RowBox[{
        RowBox[{"RIFunctionArguments", "@", "fg"}], "~", "Contains", "~", 
        "i"}]}], "\n", "  ", ",", "\"\<\>\"", ",", "\n", "  ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\n", "  ", 
         RowBox[{"r", "\n", "  ", ",", " ", 
          RowBox[{"gx", " ", "=", " ", 
           RowBox[{"g", "~", "RIFunctionEvaluateNameless", "~", "x"}]}], "\n",
           "  ", ",", " ", 
          RowBox[{"digx", " ", "=", " ", 
           RowBox[{"RIFunctionEvaluateDerivativeNameless", "[", 
            RowBox[{"g", ",", " ", "i", ",", " ", "x"}], "]"}]}]}], "}"}], 
        ",", "\n", "\n", "  ", 
        RowBox[{
         RowBox[{"Print", "@", "gx"}], ";", "\n", "  ", 
         RowBox[{"Print", "@", "digx"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", " ", 
          RowBox[{"compute", " ", "each", " ", "d_jf", 
           RowBox[{"(", "gx", ")"}], " ", "*", " ", 
           RowBox[{"(", "digx", ")"}], "_j"}], " ", "*)"}], "\n", "  ", 
         RowBox[{"r", " ", "=", " ", 
          RowBox[{"Table", "[", "\n", "\n", "    ", 
           RowBox[{
            RowBox[{
             RowBox[{"RIFunctionEvaluateDerivativeNameless", "[", 
              RowBox[{"f", ",", " ", 
               RowBox[{
                RowBox[{"RIFunctionArguments", "[", "f", "]"}], "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", " ", "gx"}], "]"}], " ", 
             "*", " ", 
             RowBox[{"(*", " ", 
              RowBox[{"RVVScale", " ", "in", " ", "named", " ", "version"}], 
              " ", "*)"}], " ", 
             RowBox[{"digx", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], " ", 
            RowBox[{"(*", " ", 
             RowBox[{"todo", " ", "use", " ", "indexed", " ", "version"}], 
             " ", "*)"}], "\n", "\n", "    ", ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", 
              RowBox[{"Length", "@", 
               RowBox[{"RIFunctionArguments", "@", "f"}]}]}], "}"}]}], "\n", 
           "\n", "  ", "]"}]}], ";", "\n", "\n", "  ", 
         RowBox[{"Print", "@", "r"}], ";", "\n", "\n", "  ", 
         RowBox[{"(*", " ", "Dot", " ", "*)"}], "\n", "  ", 
         RowBox[{"Fold", "[", "\n", "    ", 
          RowBox[{"Plus", " ", 
           RowBox[{"(*", 
            RowBox[{"RVVPlus", " ", "in", " ", "named", " ", "version"}], " ",
             "*)"}], ",", " ", "r"}], "\n", "  ", "]"}]}]}], "\n", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "todo", " ", "could", " ", "use", " ", "evaluate", " ", "derivative",
           " ", "multiple"}], ",", " ", 
         RowBox[{
         "retrieve", " ", "a", " ", "matrix", " ", "and", " ", "or", " ", 
          "do", " ", 
          RowBox[{"a", " ", "'"}], "matrix", " ", "multiplication", " ", 
          "via", " ", "RVarval"}]}], " ", "*)"}], "\n", "\n", "]"}]}], "\n", 
     "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"^", 
     RowBox[{"^", " ", 
      RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Given", " ", "an", " ", "injective", "\n", "\n", 
      RowBox[{"s", ":", " ", "A"}]}], " ", "->", " ", 
     RowBox[{
      RowBox[{
      "B", "\n", "\n", "construct", " ", "the", " ", "selector", " ", 
       "function", "\n", "\n", 
       RowBox[{"select", ":", " ", 
        RowBox[{"(", 
         RowBox[{"B", " ", "->", " ", "R"}], ")"}]}]}], " ", "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", " ", "->", " ", "R"}], ")"}], "\n", "\n", "with", "\n", 
       "\n", "select", 
       RowBox[{"(", "x", ")"}], 
       RowBox[{"(", "a", ")"}]}]}]}], " ", "=", " ", 
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{"s", 
       RowBox[{"(", "a", ")"}]}], ")"}]}]}], "\n", "\n", "*)"}], 
  "\n"}]], "Code"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"^", 
   RowBox[{"^", " ", 
    RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
  RowBox[{"(*", " ", "Name", " ", "*)"}]}]], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"RIFunctionMakeMultiDerivative", "[", "\n", "\n", 
      RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
      RowBox[{
       RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
       "f_RIFunction", "\n", "  ", ",", " ", "y_List", "\n", "  ", ",", " ", 
       RowBox[{"pairing_", " ", ":", " ", 
        RowBox[{"(", 
         RowBox[{"Reverse", "@*", "list"}], ")"}]}]}], "\n", "\n", 
      RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"RIFunctionArguments", "@", "f"}], "~", "ContainsAll", "~", 
      "y"}]}], "\n", "\n", "  ", ",", 
    "\"\<For f: (I -> R) -> (J -> R) and I' subset I,\nconstruct\nd_I' f: (I \
-> R) -> (J x I' -> R)\n\nWith\n\n(d_I' f x)({j, i}) = (d_i f x)(i)\n\nfor \
all x (multiple derivatives together, jacobian matrix)\n\nBy changing \
pairing, you can index the result differently. The default is \
(Reverse@*List), to arrive at a\nrow-column indexed jacobian matrix with \
individual derivatives by single variables in columns and gradients in \
rows.\>\"", "\n", "\n", "\n", "  ", ",", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "TODO", " ", "Fail", " ", "for", " ", "y", " ", "not", " ", "a", " ", 
         "sublist", " ", "of", " ", "Arguments"}], " ", "*)"}], "\n", "  ", 
       RowBox[{"components", " ", "=", " ", 
        RowBox[{"FiniteMappingMakeFromLists", "[", 
         RowBox[{"y", ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"RIFunctionMakeDerivative", "[", 
             RowBox[{"f", ",", "#"}], "]"}], "&"}], "/@", "y"}]}], "]"}]}], 
       "}"}], ",", " ", 
      RowBox[{"Null", "\n", "\n", ";", " ", 
       RowBox[{"RIFunction", "[", 
        RowBox[{"Multiple", ",", " ", "components", ",", " ", "pairing"}], 
        "]"}]}]}], "\n", "\n", 
     RowBox[{"(*", " ", 
      RowBox[{"^", 
       RowBox[{"^", " ", 
        RowBox[{"End", " ", "^", "^"}]}]}], " ", "*)"}], " ", "]"}]}], "\n", 
   "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"TODO", " ", "Indexed", " ", "version"}], " ", "*)"}]}]}], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionMakeFullJacobian", "[", "f_RIFunction", "]"}], " ", 
    ",", "\"\<\>\"", ",", " ", 
    RowBox[{"RIFunctionMakeMultiDerivative", "[", 
     RowBox[{"f", ",", " ", 
      RowBox[{"RIFunctionArguments", "@", "f"}]}], "]"}]}], "\n", "]"}], 
  ";"}]], "Code"],

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionMakeMultiDerivativeIndexed", "[", 
       RowBox[{"f_RIFunction", ",", " ", 
        RowBox[{"y", ":", " ", 
         RowBox[{"{", "__Integer", "}"}]}], ",", " ", 
        RowBox[{"pairing_", " ", ":", " ", 
         RowBox[{"(", 
          RowBox[{"Reverse", "@*", "list"}], ")"}]}]}], "]"}], " ", ",", 
      "\"\<\>\"", ",", "\n", "    ", 
      RowBox[{"RIFunctionMakeMultiDerivative", "[", 
       RowBox[{"f", ",", " ", 
        RowBox[{
         RowBox[{"RIFunctionArguments", "[", "f", "]"}], "[", 
         RowBox[{"[", "y", "]"}], "]"}], ",", " ", "pairing"}], "]"}]}], "\n",
      "  ", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", " ", 
     RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", "\n", "\n", "*)"}], "\n", "\n", 
   RowBox[{"(*", " ", "Name", " ", "*)"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionMakeDerivativeIndexed", "[", "\n", "\n", 
     RowBox[{"(*", " ", "Arguments", " ", "*)"}], " ", 
     RowBox[{
      RowBox[{"PatternSequence", "[", "]"}], "\n", "\n", "  ", ",", " ", 
      RowBox[{"f", " ", ":", " ", 
       RowBox[{"RIFunction", "[", 
        RowBox[{
        "ExpressionList", ",", " ", "expr_", ",", " ", "vars_List", ",", " ", 
         "___"}], "]"}]}], "\n", "  ", ",", " ", "i_Integer"}], "\n", 
     RowBox[{"(*", " ", "Code", " ", "*)"}], " ", "]"}], " ", ",", "\n", 
    "  ", "\"\<df\n--\ndx\n\nwhere x is specified by index into \
Arguments\>\"", "\n", "  ", ",", 
    RowBox[{"RIFunctionMakeDerivative", "[", 
     RowBox[{"f", ",", " ", 
      RowBox[{
       RowBox[{"RIFunctionArguments", "[", "f", "]"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], " ", "]"}]}], "\n", "  ", "]"}], 
  ";"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"--", " ", 
    RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
    "C", " ", "code", " ", "with", " ", "variable", " ", "names", " ", 
     "generated", " ", "as", " ", "v_x", "_y"}], ",", 
    RowBox[{"...", " ", "where", "\n", "x"}], ",", " ", 
    RowBox[{
     RowBox[{
     "y", " ", "etc", " ", "are", " ", "the", " ", "atoms", " ", "appearing", 
      " ", "in", " ", "the", " ", "name", " ", "of", " ", "the", " ", "i"}], 
     "-", 
     RowBox[{"th", " ", 
      RowBox[{"variable", ".", "\n", "`"}], " ", 
      RowBox[{"and", " ", ".", " ", "in"}], " ", "atoms", " ", "are", " ", 
      "replaced", " ", "by", " ", "_"}]}]}], "\n", "*)"}], "\n", 
  RowBox[{"(*", " ", "TODO", " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"RIFunctionCForm", ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"--", " ", 
     RowBox[{"Purpose", " ", "--"}]}], " ", "*)"}], "\n", 
   RowBox[{"(*", "\n", "\n", "\n", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionCFormExpressions", "[", "e_RIFunction", "]"}], "\n", 
      "  ", ",", 
      "\"\<Produce C code evaluating this function.\n\nC code with variables \
x[i] (x(i), function call - uniformity - you have to define this to an array \
indexing operation ... TODO), 0-based\n\nf(const double* const x, double* \
out)\>\"", "\n", "  ", ",", 
      RowBox[{"With", "[", "\n", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xrep", " ", "=", " ", 
          RowBox[{"RuleMapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "@", 
              RowBox[{"CIndex", "@", "#2"}]}], " ", "&"}], " ", ",", " ", 
            RowBox[{"RIFunctionArguments", "@", "e"}]}], "]"}]}], "}"}], ",", 
        "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"cformSymbolic", "[", 
           RowBox[{"#", ",", " ", "xrep"}], "]"}], " ", "&"}], " ", "/@", " ", 
         RowBox[{"RIFunctionExpressionList", "@", "e"}]}]}], "\n", "  ", 
       "]"}]}], "\n", "  ", "]"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionCFormOutputArrayAssignments", "[", 
       RowBox[{"e_RIFunction", ",", " ", 
        RowBox[{"out_String", " ", ":", " ", "\"\<out\>\""}]}], "]"}], " ", 
      ",", "\"\<\>\"", ",", " ", 
      RowBox[{
       RowBox[{"{", "\n", "    ", 
        RowBox[{"cforms", " ", "=", " ", 
         RowBox[{"RIFunctionCFormExpressions", "@", "e"}]}], "\n", "  ", 
        "}"}], "~", "With", "~", 
       RowBox[{"CBlock", "[", "\n", "    ", 
        RowBox[{
         RowBox[{
          RowBox[{"CAssign", "[", 
           RowBox[{
            RowBox[{"CArray", "[", 
             RowBox[{"out", ",", "  ", 
              RowBox[{"CIndex", "@", "#2"}]}], "]"}], ",", " ", "#1"}], "]"}],
           "&"}], " ", "~", "MapIndexed", "~", " ", "cforms"}], "\n", "  ", 
        "]"}]}]}], "\n", "]"}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "TODO", " ", "Allow", " ", "the", " ", "user", " ", "to", " ", 
       "specify", " ", "the", " ", "input"}], "-", 
      RowBox[{"output", " ", "format", " ", "more", " ", "freely"}]}], ",", 
     "\n", 
     RowBox[{
     "or", " ", "use", " ", "a", " ", "general", " ", "and", " ", "simple", 
      " ", "enough", " ", "format", " ", "and", " ", "provide", " ", 
      "examples", " ", "of", " ", "how", " ", "to", " ", "write", " ", 
      "wrappers"}]}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{"DefinePublicFunction", "[", "\n", 
     RowBox[{
      RowBox[{"RIFunctionCFormIndexedFunction", "[", 
       RowBox[{"e_RIFunction", ",", " ", 
        RowBox[{"f_String", " ", ":", " ", "\"\<f\>\""}], ",", " ", 
        RowBox[{"out_String", " ", ":", " ", "\"\<out\>\""}]}], "]"}], " ", 
      ",", "\"\<\>\"", ",", " ", 
      RowBox[{"CFunction", "[", "\n", "    ", 
       RowBox[{"\"\<void\>\"", ",", " ", "f", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<double\>\"", ",", " ", "\"\<const\>\"", ",", " ", 
              "\"\<*\>\"", ",", " ", "\"\<const\>\""}], "}"}], ",", " ", 
            "\"\<x\>\""}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<double\>\"", ",", " ", "out"}], "}"}]}], "}"}], ",", 
        "\n", "    ", 
        RowBox[{"RIFunctionCFormOutputArrayAssignments", "[", 
         RowBox[{"e", ",", " ", "out"}], "]"}]}], "\n", "  ", "]"}]}], "\n", 
     "]"}], ";"}]}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DefinePublicFunction", "[", "\n", 
   RowBox[{
    RowBox[{"RIFunctionCFormAllDerivativesIndexed", "[", 
     RowBox[{"e_RIFunction", ",", " ", 
      RowBox[{"out_String", " ", ":", " ", "\"\<out\>\""}], ",", " ", 
      RowBox[{"i_String", " ", ":", " ", "\"\<i\>\""}]}], "]"}], " ", ",", 
    "\"\<\>\"", ",", "\n", "    ", 
    RowBox[{"CSwitch", "[", 
     RowBox[{"i", ",", " ", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "TODO", " ", "CSwitch", " ", "creates", " ", "spurious", " ", "error",
          " ", "message", " ", 
         RowBox[{"StringTrim", "::", 
          RowBox[{"strse", ":", " ", 
           RowBox[{
           "String", " ", "or", " ", "list", " ", "of", " ", "strings", " ", 
            "expected", " ", "at", " ", "position", " ", "1", " ", "in", " ", 
            RowBox[{
             RowBox[{"StringTrim", "[", "0", "]"}], "."}]}]}]}]}], " ", ">>", 
        " ", 
        RowBox[{"even", " ", "when", " ", "used", " ", "correctly", " ", 
         RowBox[{"(", "reported", ")"}]}]}], "*)"}], "\n", "      ", 
      RowBox[{"Sequence", "@@", 
       RowBox[{"Flatten", "[", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"CIndex", "@", "#2"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"RIFunctionCFormOutputArrayAssignments", "[", 
                RowBox[{"RIFunctionMakeDerivative", "[", 
                 RowBox[{"e", ",", " ", "#1"}], "]"}], "]"}], ",", 
               RowBox[{"CBreak", "[", "]"}]}], "}"}]}], "}"}], "&"}], "\n", 
          "        ", "~", "MapIndexed", "~", "\n", "        ", 
          RowBox[{"RIFunctionArguments", "@", "e"}]}], "\n", "      ", ",", 
         "1"}], "]"}]}]}], "\n", "      ", "]"}]}], "\n", "    ", "]"}], 
  ";"}]], "Code"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DefinePublicFunction", "[", "\n", 
    RowBox[{
     RowBox[{"RIFunctionCFormAllDerivativesIndexedFunction", "[", 
      RowBox[{"e_RIFunction", ",", " ", 
       RowBox[{"df_String", " ", ":", " ", "\"\<df\>\""}], ",", " ", 
       RowBox[{"out_String", " ", ":", " ", "\"\<out\>\""}], ",", " ", 
       RowBox[{"i_String", " ", ":", " ", "\"\<i\>\""}]}], "]"}], " ", ",", 
     "\"\<\>\"", ",", "  ", 
     RowBox[{"CFunction", "[", "\n", "  ", 
      RowBox[{"\"\<void\>\"", ",", " ", "df", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<int\>\"", ",", "i"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "\"\<double\>\"", ",", " ", "\"\<const\>\"", ",", " ", 
             "\"\<*\>\"", ",", " ", "\"\<const\>\""}], "}"}], ",", " ", 
           "\"\<x\>\""}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"\"\<double\>\"", ",", " ", "out"}], "}"}]}], "}"}], ",", 
       "\n", "  ", 
       RowBox[{"RIFunctionCFormAllDerivativesIndexed", "[", 
        RowBox[{"e", ",", " ", "out", ",", " ", "i"}], "]"}]}], "\n", "]"}]}],
     "\n", "]"}], ";"}], "\n", "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
   "TODO", " ", "allow", " ", "constructing", " ", "matrix", " ", "output"}], 
   " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CIndex", "[", 
     RowBox[{"{", "i_Integer", "}"}], "]"}], " ", ":=", " ", 
    RowBox[{"i", "-", "1"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"End", "[", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Code"]
},
WindowSize->{775, 872},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 6095, 123, 852, "Code"],
Cell[6656, 145, 14468, 321, 1835, "Code"],
Cell[21127, 468, 1476, 24, 70, "Code"],
Cell[22606, 494, 962, 25, 70, "Code"],
Cell[23571, 521, 259, 8, 70, "Code"],
Cell[23833, 531, 134, 4, 70, "Code"],
Cell[23970, 537, 115, 3, 70, "Code"],
Cell[24088, 542, 1101, 26, 70, "Code"],
Cell[25192, 570, 17233, 421, 70, "Code"],
Cell[42428, 993, 748, 19, 70, "Code"],
Cell[43179, 1014, 1938, 41, 70, "Code"],
Cell[45120, 1057, 2980, 75, 70, "Code"],
Cell[48103, 1134, 1525, 40, 70, "Code"],
Cell[49631, 1176, 1353, 35, 70, "Code"],
Cell[50987, 1213, 2276, 52, 70, "Code"],
Cell[53266, 1267, 228, 6, 70, "Code"],
Cell[53497, 1275, 4554, 110, 70, "Code"],
Cell[58054, 1387, 1648, 40, 70, "Code"],
Cell[59705, 1429, 7010, 167, 70, "Code"],
Cell[66718, 1598, 10703, 239, 70, "Code"],
Cell[77424, 1839, 923, 27, 70, "Code"],
Cell[78350, 1868, 134, 4, 70, "Code"],
Cell[78487, 1874, 228, 6, 70, "Code"],
Cell[78718, 1882, 2263, 50, 70, "Code"],
Cell[80984, 1934, 361, 9, 70, "Code"],
Cell[81348, 1945, 976, 24, 70, "Code"],
Cell[82327, 1971, 945, 21, 70, "Code"],
Cell[83275, 1994, 4708, 112, 70, "Code"],
Cell[87986, 2108, 1896, 43, 70, "Code"],
Cell[89885, 2153, 1698, 44, 70, "Code"]
}
]
*)

(* End of internal cache information *)

